{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gabit\\\\Desktop\\\\Apps\\\\moveit\\\\src\\\\contexts\\\\ChallengeContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challendesCompleted = _useState3[0],\n      setChallendesCompleted = _useState3[1];\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challendesCompleted: challendesCompleted,\n      levelUp: levelUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"jAUWajSmJWxTI3zt7xCkItT9fiY=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/Users/gabit/Desktop/Apps/moveit/src/contexts/ChallengeContext.tsx"],"names":["createContext","useState","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challendesCompleted","setChallendesCompleted","levelUp"],"mappings":";;;;;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,QAAiD,OAAjD;AAEA,OAAO,IAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAQP,OAAO,SAASG,kBAAT,OAA+D;AAAA;;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;;AAAA,kBACzCH,QAAQ,CAAC,CAAD,CADiC;AAAA,MAC3DI,KAD2D;AAAA,MACpDC,QADoD;;AAAA,mBAEhBL,QAAQ,CAAC,CAAD,CAFQ;AAAA,MAE3DM,iBAF2D;AAAA,MAExCC,oBAFwC;;AAAA,mBAGZP,QAAQ,CAAC,CAAD,CAHI;AAAA,MAG3DQ,mBAH2D;AAAA,MAGtCC,sBAHsC;;AAKlE,WAASC,OAAT,GAAkB;AAChBL,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACD;;AAED,sBACA,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAK,EAALA,KAAD;AAAQE,MAAAA,iBAAiB,EAAjBA,iBAAR;AAA2BE,MAAAA,mBAAmB,EAAnBA,mBAA3B;AAAgDE,MAAAA,OAAO,EAAPA;AAAhD,KAAnC;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADA;AAKH;;GAdeD,kB;;KAAAA,kB","sourcesContent":["import {createContext, useState, ReactNode} from 'react';\r\n\r\nexport const ChallengesContext = createContext({\r\n\r\n});\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport function ChallengesProvider({children}:ChallengesProviderProps){\r\n    const [level, setLevel]= useState(1);\r\n    const [currentExperience, setCurrentExperience] = useState(0);\r\n    const [challendesCompleted, setChallendesCompleted] = useState(0);\r\n\r\n    function levelUp(){\r\n      setLevel(level+1)\r\n    }\r\n\r\n    return (\r\n    <ChallengesContext.Provider value={{level, currentExperience, challendesCompleted, levelUp}}>\r\n      {children}\r\n    </ChallengesContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
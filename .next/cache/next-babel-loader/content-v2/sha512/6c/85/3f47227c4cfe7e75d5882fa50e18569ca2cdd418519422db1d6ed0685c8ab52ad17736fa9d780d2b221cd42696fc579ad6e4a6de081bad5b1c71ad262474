{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/gabit/Desktop/Apps/moveit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gabit\\\\Desktop\\\\Apps\\\\moveit\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { ChallengesContext } from '../contexts/ChallengeContext';\nimport { useEffect, useState } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nvar countdownTimeout;\nexport function Countdown() {\n  _s();\n\n  var contextData = useContext(ChallengesContext);\n  alert(contextData);\n\n  var _useState = useState(0.05 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.05 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: resetCountdown,\n        className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: startCountdown,\n        className: styles.countdownButton,\n        children: \"Iniciar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Countdown, \"98WuV/NgTVzWpTr9sCdfNznx4M8=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/Users/gabit/Desktop/Apps/moveit/src/components/Countdown.tsx"],"names":["useContext","ChallengesContext","useEffect","useState","styles","countdownTimeout","Countdown","contextData","alert","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","startCountdown","resetCountdown","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":"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","sourcesContent":["import { useContext } from 'react';\r\nimport { ChallengesContext } from '../contexts/ChallengeContext';\r\nimport { useEffect, useState } from 'react';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function Countdown() {\r\n\r\n    const contextData = useContext(ChallengesContext);\r\n\r\n    alert(contextData);\r\n\r\n    const [time, setTime] = useState(0.05 * 60);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n\r\n\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n\r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\r\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\r\n\r\n    function startCountdown() {\r\n        setIsActive(true);\r\n    }\r\n\r\n    function resetCountdown() {\r\n        clearTimeout(countdownTimeout);\r\n        setIsActive(false);\r\n        setTime(0.05 * 60);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isActive && time > 0) {\r\n            countdownTimeout = setTimeout(() => {\r\n                setTime(time - 1);\r\n            }, 1000);\r\n        }\r\n        else if (isActive && time === 0) {\r\n            setHasFinished(true);\r\n            setIsActive(false);\r\n        }\r\n    }, [isActive, time]);\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.countdownContainer}>\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondLeft}</span>\r\n                    <span>{secondRight}</span>\r\n                </div>\r\n            </div>\r\n\r\n            {hasFinished ? (\r\n                <button disabled\r\n                    className={styles.countdownButton}>\r\n                    Ciclo encerrado\r\n                </button>\r\n            ) : (\r\n                    <>\r\n                        { isActive ? (\r\n                            <button type=\"button\"\r\n                                onClick={resetCountdown}\r\n                                className={`${styles.countdownButton} ${styles.countdownButtonActive}`}>\r\n                                Abandonar ciclo\r\n                            </button>\r\n                        ) : (\r\n\r\n                                <button type=\"button\"\r\n                                    onClick={startCountdown}\r\n                                    className={styles.countdownButton}>\r\n                                    Iniciar ciclo\r\n                                </button>\r\n                            )\r\n                        }\r\n                    </>\r\n                )}\r\n        </div>\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabit\\\\Desktop\\\\Apps\\\\moveit\\\\src\\\\contexts\\\\ChallengeContext.tsx\";\nimport { createContext, useState } from 'react';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: challendesCompleted,\n    1: setChallendesCompleted\n  } = useState(0);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    console.log('New Challenge');\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      startNewChallenge,\n      currentExperience,\n      challendesCompleted,\n      levelUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/gabit/Desktop/Apps/moveit/src/contexts/ChallengeContext.tsx"],"names":["createContext","useState","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challendesCompleted","setChallendesCompleted","levelUp","startNewChallenge","console","log"],"mappings":";;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,QAAiD,OAAjD;AAEA,OAAO,MAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAgBP,OAAO,SAASG,kBAAT,CAA4B;AAACC,EAAAA;AAAD,CAA5B,EAA+D;AAClE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAmBL,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM;AAAA,OAACM,iBAAD;AAAA,OAAoBC;AAApB,MAA4CP,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM;AAAA,OAACQ,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDT,QAAQ,CAAC,CAAD,CAA9D;;AAEA,WAASU,OAAT,GAAkB;AAChBL,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACD;;AAED,WAASO,iBAAT,GAA4B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;;AAED,sBACA,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAC/BT,MAAAA,KAD+B;AAE/BO,MAAAA,iBAF+B;AAG/BL,MAAAA,iBAH+B;AAI/BE,MAAAA,mBAJ+B;AAK/BE,MAAAA;AAL+B,KAAnC;AAAA,cAOGP;AAPH;AAAA;AAAA;AAAA;AAAA,UADA;AAWH","sourcesContent":["import {createContext, useState, ReactNode} from 'react';\r\n\r\nexport const ChallengesContext = createContext({\r\n\r\n});\r\n\r\ninterface ChallengesContextData {\r\n    level: number;\r\n    startNewChallenge: () => void;\r\n    currentExperience:  number;\r\n    challendesCompleted:  number;\r\n    levelUp: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport function ChallengesProvider({children}:ChallengesProviderProps){\r\n    const [level, setLevel]= useState(1);\r\n    const [currentExperience, setCurrentExperience] = useState(0);\r\n    const [challendesCompleted, setChallendesCompleted] = useState(0);\r\n\r\n    function levelUp(){\r\n      setLevel(level+1)\r\n    }\r\n\r\n    function startNewChallenge(){\r\n        console.log('New Challenge')\r\n    }\r\n\r\n    return (\r\n    <ChallengesContext.Provider value={{\r\n        level,\r\n        startNewChallenge,\r\n        currentExperience,\r\n        challendesCompleted,\r\n        levelUp\r\n        }}>\r\n      {children}\r\n    </ChallengesContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabit\\\\Desktop\\\\Apps\\\\moveit\\\\src\\\\components\\\\Countdown.tsx\";\nimport { useContext } from 'react';\nimport { CountdownContext } from '../contexts/CountdownContext';\nimport styles from '../styles/components/Countdown.module.css';\nlet countdownTimeout;\nexport function Countdown() {\n  const {\n    minutes,\n    seconds,\n    hasFinished,\n    isActive,\n    resetCountdown,\n    startCountdown\n  } = useContext(CountdownContext);\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: resetCountdown,\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: startCountdown,\n        className: styles.countdownButton,\n        children: \"Iniciar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/gabit/Desktop/Apps/moveit/src/components/Countdown.tsx"],"names":["useContext","CountdownContext","styles","countdownTimeout","Countdown","minutes","seconds","hasFinished","isActive","resetCountdown","startCountdown","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;;AAAA,SAASA,UAAT,QAAgD,OAAhD;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,IAAIC,gBAAJ;AAEA,OAAO,SAASC,SAAT,GAAqB;AAExB,QAAM;AACEC,IAAAA,OADF;AAEEC,IAAAA,OAFF;AAGEC,IAAAA,WAHF;AAIEC,IAAAA,QAJF;AAKEC,IAAAA,cALF;AAMEC,IAAAA;AANF,MAOEV,UAAU,CAACC,gBAAD,CAPlB;AASA,QAAM,CAACU,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACR,OAAD,CAAN,CAAgBS,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BJ,MAAM,CAACP,OAAD,CAAN,CAAgBQ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AAGA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEb,MAAM,CAACgB,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaKV,WAAW,gBACR;AAAQ,MAAA,QAAQ,MAAhB;AACI,MAAA,SAAS,EAAEL,MAAM,CAACiB,eADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAMJ;AAAA,gBACMX,QAAQ,gBACN;AAAQ,QAAA,IAAI,EAAC,QAAb;AACI,QAAA,OAAO,EAAEC,cADb;AAEI,QAAA,SAAS,EAAG,GAAEP,MAAM,CAACiB,eAAgB,IAAGjB,MAAM,CAACkB,qBAAsB,EAFzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,gBAQF;AAAQ,QAAA,IAAI,EAAC,QAAb;AACI,QAAA,OAAO,EAAEV,cADb;AAEI,QAAA,SAAS,EAAER,MAAM,CAACiB,eAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATZ,qBAnBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH","sourcesContent":["import { useContext, useEffect, useState } from 'react';\r\nimport { CountdownContext } from '../contexts/CountdownContext';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function Countdown() {\r\n\r\n    const {\r\n            minutes,\r\n            seconds,\r\n            hasFinished,\r\n            isActive,\r\n            resetCountdown,\r\n            startCountdown\r\n        } = useContext(CountdownContext);\r\n\r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\r\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div className={styles.countdownContainer}>\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondLeft}</span>\r\n                    <span>{secondRight}</span>\r\n                </div>\r\n            </div>\r\n\r\n            {hasFinished ? (\r\n                <button disabled\r\n                    className={styles.countdownButton}>\r\n                    Ciclo encerrado\r\n                </button>\r\n            ) : (\r\n                    <>\r\n                        { isActive ? (\r\n                            <button type=\"button\"\r\n                                onClick={resetCountdown}\r\n                                className={`${styles.countdownButton} ${styles.countdownButtonActive}`}>\r\n                                Abandonar ciclo\r\n                            </button>\r\n                        ) : (\r\n\r\n                                <button type=\"button\"\r\n                                    onClick={startCountdown}\r\n                                    className={styles.countdownButton}>\r\n                                    Iniciar ciclo\r\n                                </button>\r\n                            )\r\n                        }\r\n                    </>\r\n                )}\r\n        </div>\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}